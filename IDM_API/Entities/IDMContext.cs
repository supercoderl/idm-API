// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace IDM_API.Entities;

public partial class IDMContext : DbContext
{
    public IDMContext(DbContextOptions<IDMContext> options)
        : base(options)
    {
    }

    public virtual DbSet<tbl_approval> tbl_approvals { get; set; }

    public virtual DbSet<tbl_assignment> tbl_assignments { get; set; }

    public virtual DbSet<tbl_backup> tbl_backups { get; set; }

    public virtual DbSet<tbl_department> tbl_departments { get; set; }

    public virtual DbSet<tbl_discipline> tbl_disciplines { get; set; }

    public virtual DbSet<tbl_file> tbl_files { get; set; }

    public virtual DbSet<tbl_menu> tbl_menus { get; set; }

    public virtual DbSet<tbl_menu_role> tbl_menu_roles { get; set; }

    public virtual DbSet<tbl_progress> tbl_progresses { get; set; }

    public virtual DbSet<tbl_proposal> tbl_proposals { get; set; }

    public virtual DbSet<tbl_role> tbl_roles { get; set; }

    public virtual DbSet<tbl_schedule> tbl_schedules { get; set; }

    public virtual DbSet<tbl_task> tbl_tasks { get; set; }

    public virtual DbSet<tbl_token> tbl_tokens { get; set; }

    public virtual DbSet<tbl_user> tbl_users { get; set; }

    public virtual DbSet<tbl_user_role> tbl_user_roles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<tbl_approval>(entity =>
        {
            entity.HasKey(e => e.ProposalApprovals).HasName("tbl_approval_proposalapprovals_primary");

            entity.HasOne(d => d.Approver).WithMany(p => p.tbl_approvals).HasConstraintName("FK_tbl_approval_tbl_user");

            entity.HasOne(d => d.Proposal).WithMany(p => p.tbl_approvals)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_approval_proposals");
        });

        modelBuilder.Entity<tbl_assignment>(entity =>
        {
            entity.HasKey(e => e.AssignmentID).HasName("tbl_assignment_assignmentid_primary");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.tbl_assignmentCreatedByNavigations).HasConstraintName("FK_assignment_user_creator");

            entity.HasOne(d => d.EmployeeNavigation).WithMany(p => p.tbl_assignmentEmployeeNavigations).HasConstraintName("FK_assignment_user");

            entity.HasOne(d => d.Task).WithMany(p => p.tbl_assignments).HasConstraintName("FK_assignment_task");
        });

        modelBuilder.Entity<tbl_backup>(entity =>
        {
            entity.HasKey(e => e.BackupID).HasName("tbl_backup_backupid_primary");

            entity.Property(e => e.BackupID).ValueGeneratedNever();

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.tbl_backups).HasConstraintName("FK_backup_user_creator");
        });

        modelBuilder.Entity<tbl_department>(entity =>
        {
            entity.HasKey(e => e.DepartmentID).HasName("tbl_department_departmentid_primary");
        });

        modelBuilder.Entity<tbl_discipline>(entity =>
        {
            entity.HasKey(e => e.DesciplinesID).HasName("tbl_disciplines_desciplinesid_primary");

            entity.HasOne(d => d.Department).WithMany(p => p.tbl_disciplines).HasConstraintName("FK_disciplines_department");
        });

        modelBuilder.Entity<tbl_file>(entity =>
        {
            entity.HasKey(e => e.FileID).HasName("tbl_file_fileid_primary");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.tbl_fileCreatedByNavigations).HasConstraintName("FK_file_user_creator");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.tbl_fileUpdatedByNavigations).HasConstraintName("FK_file_user_updater");
        });

        modelBuilder.Entity<tbl_menu>(entity =>
        {
            entity.HasKey(e => e.MenuID).HasName("PK__tmp_ms_x__C99ED25023B87FBA");

            entity.HasOne(d => d.MenuParent).WithMany(p => p.InverseMenuParent).HasConstraintName("FK_parent_child");
        });

        modelBuilder.Entity<tbl_menu_role>(entity =>
        {
            entity.HasKey(e => e.MenuRoleID).HasName("PK__tmp_ms_x__880F2CC1569CAE77");

            entity.HasOne(d => d.Menu).WithMany(p => p.tbl_menu_roles).HasConstraintName("FK_menu_role_menu");

            entity.HasOne(d => d.Role).WithMany(p => p.tbl_menu_roles).HasConstraintName("FK_menu_role_role");
        });

        modelBuilder.Entity<tbl_progress>(entity =>
        {
            entity.HasKey(e => e.ProgressID).HasName("tbl_progress_progressid_primary");

            entity.HasOne(d => d.Assignment).WithMany(p => p.tbl_progresses).HasConstraintName("FK_progress_assignment");
        });

        modelBuilder.Entity<tbl_proposal>(entity =>
        {
            entity.HasKey(e => e.ProposalsID).HasName("tbl_proposals_proposalsid_primary");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.tbl_proposalCreatedByNavigations).HasConstraintName("FK_proposals_user_creator");

            entity.HasOne(d => d.File).WithMany(p => p.tbl_proposals).HasConstraintName("FK_tbl_proposals_tbl_file");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.tbl_proposalUpdatedByNavigations).HasConstraintName("FK_proposals_user_updater");

            entity.HasOne(d => d.User).WithMany(p => p.tbl_proposalUsers).HasConstraintName("FK_proposals_user");
        });

        modelBuilder.Entity<tbl_role>(entity =>
        {
            entity.HasKey(e => e.RoleID).HasName("tbl_role_roleid_primary");
        });

        modelBuilder.Entity<tbl_schedule>(entity =>
        {
            entity.HasKey(e => e.ScheduleID).HasName("tbl_schedule_scheduleid_primary");

            entity.HasOne(d => d.OrganizerNavigation).WithMany(p => p.tbl_schedules).HasConstraintName("tbl_schedule_organizer_foreign");
        });

        modelBuilder.Entity<tbl_task>(entity =>
        {
            entity.HasKey(e => e.TaskID).HasName("tbl_task_taskid_primary");
        });

        modelBuilder.Entity<tbl_token>(entity =>
        {
            entity.HasKey(e => e.TokenID).HasName("PK__tmp_ms_x__658FEE8A43B0C6A3");

            entity.HasOne(d => d.User).WithMany(p => p.tbl_tokens).HasConstraintName("FK_tbl_token_tbl_user");
        });

        modelBuilder.Entity<tbl_user>(entity =>
        {
            entity.HasKey(e => e.UserID).HasName("tbl_user_userid_primary");

            entity.Property(e => e.UserID).ValueGeneratedNever();
            entity.Property(e => e.Status).HasDefaultValueSql("('1')");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.InverseCreatedByNavigation).HasConstraintName("FK_user_creator");

            entity.HasOne(d => d.Department).WithMany(p => p.tbl_users).HasConstraintName("FK_tbl_user_department");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.InverseUpdatedByNavigation).HasConstraintName("FK_user_updater");
        });

        modelBuilder.Entity<tbl_user_role>(entity =>
        {
            entity.HasKey(e => e.UserRoleID).HasName("tbl_user_role_userroleid_primary");

            entity.HasOne(d => d.Role).WithMany(p => p.tbl_user_roles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_user_role_role");

            entity.HasOne(d => d.User).WithMany(p => p.tbl_user_roles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_user_role_user");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}